import Foundation

//zadanie 1
var x = 5
var y = 10

print("\(x) + \(y) = \(x+y)")
let pg = "Gdansk University of Technology"
var newpg = pg.replacingOccurrences(of: "n", with: "⭐")

/*
for n in pg
{
    if n == "n"
    {
        newpg = newpg + "⭐"
    }
    else
    {
        newpg = newpg + String(n)
    }
}*/
print(newpg)

let imienazwisko = "Krzysztof Madajczak"
let reversed = String(imienazwisko.reversed())

print (reversed)

//zadaanie2

for _ in 1...11
{
    print("I will pass this course with best mark, because Swift is great!")
}
var n = 8
for i in 1...n
{
    print(i*i)
}
n = 4
for _ in 1...n
{
    var wiersz = ""
    for _ in 1...n
    {
        wiersz = wiersz + "@"
    }
    print(wiersz)
}

//zadanie 3

var numbers = [5, 10, 20, 15, 80, 13]
var max = numbers[0]
for a in numbers
{
    if(a > max)
        {
            max = a
        }
}
print(max)
var temp = [Int]()
for b in numbers.reversed()
{
    temp.append(b) 
}
print(temp)

var allNumbers = [10, 20, 10, 11, 13, 20, 10, 30]
var uniqnumber = [Int]()
for number in allNumbers
{
    if(!uniqnumber.contains(number))
    {
        uniqnumber.append(number)
    }
}
print(uniqnumber)

// zadanie 4

var xxx = 10
var div = Set<Int>()
for x in 1...xxx
{
    if(xxx%x == 0)
    {
        div.insert(x)
    }
}
print(div)

// zadanie 5
var flightNumbers = [String]()
var flights: [[String: String]] = [
    [
        "flightNumber" : "AA8025",
        "destination" : "Copenhagen"
    ],
    [
        "flightNumber" : "BA1442",
        "destination" : "New York"
    ],
    [
        "flightNumber" : "BD6741",
        "destination" : "Barcelona"
    ]
]

for flightNumber in flights 
{
    for (c, n) in flightNumber
    {
        if c == "flightNumber"
        {
            flightNumbers.append(n)
        }
    }
}
print(flightNumbers)

var names = ["Hommer","Lisa","Bart"]
var zadanie = [[ String : String ]]()
for ggg in names
{
    zadanie.append(["lastName": "Simpson", "firstName": ggg])
}
print(zadanie)


